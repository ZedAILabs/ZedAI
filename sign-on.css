@import url('https://fonts.googleapis.com/css2?family=Manrope:wght@400;700&display=swap');

:root {
  --background: #000000;
  --foreground: #ffffff;
  --primary: #ffffff;
  --primary-foreground: #000000;
  --muted: #000000;
  --muted-foreground: #ffffff;
}

/* Styles for icons, buttons, links, and text */
svg, button, a, p, h1, h2, h3, h4, h5, h6, span, div {
  color: var(--foreground);
}

/* Specific styles for SVG icons */
svg {
  fill: transparent;
  stroke: var(--foreground);
  stroke-width: 2px;
}

a:hover {
  color: var(--muted-foreground);
  text-decoration: underline;
}

button:hover {
  background-color: var(--foreground);
  color: var(--background);
}

.custom-no-underline {
  text-decoration: none;
}
.custom-no-underline:hover {
  text-decoration: none;
}

/* Ensure all text is white */
body {
  color: var(--foreground);
}

/* Override any blue colors */
.text-primary, .bg-primary, .border-primary {
  color: var(--foreground) !important;
  background-color: transparent !important;
  border-color: var(--foreground) !important;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: 'Manrope', sans-serif;
  background-color: var(--background);
  color: var(--foreground);
  line-height: 1.5;
}

.container {
  width: 100%;
  max-width: 1280px;
  margin: 0 auto;
  padding: 0 1rem;
}

.flex {
  display: flex;
}

.flex-col {
  flex-direction: column;
}

.items-center {
  align-items: center;
}

.justify-between {
  justify-content: space-between;
}

.justify-center {
  justify-content: center;
}

.min-h-\[100dvh\] {
  min-height: 100dvh;
}

.text-sm {
  font-size: 0.875rem;
}

.text-xl {
  font-size: 1.25rem;
}

.text-4xl {
  font-size: 2.25rem;
}

.font-bold {
  font-weight: 700;
}

.text-center {
  text-align: center;
}

.space-x-4 > * + * {
  margin-left: 1rem;
}

.space-y-6 > * + * {
  margin-top: 1.5rem;
}

.my-8 {
  margin-top: 2rem;
  margin-bottom: 2rem;
}

.my-12 {
  margin-top: 3rem;
  margin-bottom: 3rem;
}

.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.py-24 {
  padding-top: 6rem;
  padding-bottom: 6rem;
}

.rounded {
  border-radius: 0.25rem;
}

.bg-white {
  background-color: #ffffff;
}

.text-black {
  color: #000000;
}

.text-primary {
  color: var(--primary);
}

.bg-primary {
  background-color: var(--primary);
}

.text-primary-foreground {
  color: var(--primary-foreground);
}

.text-muted-foreground {
  color: var(--muted-foreground);
}

.bg-muted {
  background-color: var(--muted);
}

@keyframes glitch-anim {
  0% {
    clip: rect(random(100) + px, 9999px, random(100) + px, 0);
  }
  5% {
    clip: rect(random(100) + px, 9999px, random(100) + px, 0);
  }
  10% {
    clip: rect(random(100) + px, 9999px, random(100) + px, 0);
  }
  15% {
    clip: rect(random(100) + px, 9999px, random(100) + px, 0);
  }
  20% {
    clip: rect(random(100) + px, 9999px, random(100) + px, 0);
  }
  25% {
    clip: rect(random(100) + px, 9999px, random(100) + px, 0);
  }
  30% {
    clip: rect(random(100) + px, 9999px, random(100) + px, 0);
  }
  35% {
    clip: rect(random(100) + px, 9999px, random(100) + px, 0);
  }
  40% {
    clip: rect(random(100) + px, 9999px, random(100) + px, 0);
  }
  45% {
    clip: rect(random(100) + px, 9999px, random(100) + px, 0);
  }
  50% {
    clip: rect(random(100) + px, 9999px, random(100) + px, 0);
  }
  55% {
    clip: rect(random(100) + px, 9999px, random(100) + px, 0);
  }
  60% {
    clip: rect(random(100) + px, 9999px, random(100) + px, 0);
  }
  65% {
    clip: rect(random(100) + px, 9999px, random(100) + px, 0);
  }
  70% {
    clip: rect(random(100) + px, 9999px, random(100) + px, 0);
  }
  75% {
    clip: rect(random(100) + px, 9999px, random(100) + px, 0);
  }
  80% {
    clip: rect(random(100) + px, 9999px, random(100) + px, 0);
  }
  85% {
    clip: rect(random(100) + px, 9999px, random(100) + px, 0);
  }
  90% {
    clip: rect(random(100) + px, 9999px, random(100) + px, 0);
  }
  95% {
    clip: rect(random(100) + px, 9999px, random(100) + px, 0);
  }
  100% {
    clip: rect(random(100) + px, 9999px, random(100) + px, 0);
  }
}

.glitch {
  position: relative;
  overflow: hidden;
}

.glitch::before,
.glitch::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: var(--background);
  clip: rect(0, 0, 0, 0);
}

.glitch::before {
  left: 2px;
  text-shadow: -2px 0 #ff00c1;
  animation: glitch-anim 2.5s infinite linear alternate-reverse;
}

.glitch::after {
  left: -2px;
  text-shadow: -2px 0 #00fff9, 2px 2px #ff00c1;
  animation: glitch-anim 3s infinite linear alternate-reverse;
}

.grid {
  display: grid;
}

.gap-8 {
  gap: 2rem;
}

.h-8 {
  height: 2rem;
}

.w-8 {
  width: 2rem;
}

.h-12 {
  height: 3rem;
}

.w-12 {
  width: 3rem;
}

.max-w-\[600px\] {
  max-width: 600px;
}

.transition-colors {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.hover\:text-primary:hover {
  color: var(--primary);
}

@media (min-width: 768px) {
  .md\:flex {
    display: flex;
  }

  .md\:text-5xl {
    font-size: 3rem;
  }

  .md\:text-xl {
    font-size: 1.25rem;
  }

  .md\:px-6 {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }

  .md\:py-32 {
    padding-top: 8rem;
    padding-bottom: 8rem;
  }

  .md\:grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }

  .md\:grid-cols-5 {
    grid-template-columns: repeat(5, minmax(0, 1fr));
  }
}

@media (min-width: 1024px) {
  .lg\:text-6xl {
    font-size: 3.75rem;
  }
}
